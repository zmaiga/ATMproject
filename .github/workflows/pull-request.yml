name: Running gtests on pull request to main
on:
  # Triggers the workflow pull request events but only for the master (main) branch.
  pull_request:
    branches: [ master, main, feature_branch_1 ]
  
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

env:
  LINE_COV_GATE: 50
  MCDC_COV_GATE: 50
  DTP_PROJECT: ATM_testing

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: self-hosted
    continue-on-error: true

    steps:
    - uses: actions/checkout@v4

    - name: Set build id
      shell: bash
      working-directory: ${{github.workspace}}
      run: echo "build_id=build-$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV 

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}
      run: cmake -DCPPTEST_COVERAGE=ON CPPTEST_HOME=/opt/Parasoft/cpptest-ct -S . -B build

    - name: Build 
      working-directory: ${{github.workspace}}
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build build

    - name: Run Tests
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
        rm -rf /cpptest-coverage/ATM_Cpp14_lib/ATM_Cpp14_lib.clog 
        rm -rf gtest_results.xml
        ./atm_gtest --gtest_output=xml:atm_gtest_results.xml
      continue-on-error: true

    - name: Generate Reports
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: make cpptestcov-compute cpptestcov-suppress cpptestcov-report 
    
#    - name: Setup Pages
#      uses: actions/configure-pages@v5

    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: CpptestReports
        include-hidden-files: true
        path: |
          ${{github.workspace}}/.coverage/*.*

#    - name: Upload artifact
#      uses: actions/upload-pages-artifact@v3
#      with:
        # Upload coverage reports
#        path: ${{github.workspace}}/.coverage

    - name: Publish Reports to DTP
      working-directory: ${{github.workspace}}
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run:  cpptestcov report dtp -settings cpptestcli.properties -property build.id=${build_id} -property dtp.project=${DTP_PROJECT} .coverage build/atm_gtest_results.xml
    
    - name: Line Coverage Quality Gate
      working-directory: ${{github.workspace}}
      shell: bash
      # Query for project's coverage and compare with the gate requirements
      run: NUMBER=$(cpptestcov query -coverage LC .coverage) && if [ $NUMBER -lt $LINE_COV_GATE ]; then echo "Line coverage quality gate failed"; echo "Expected result $LINE_COV_GATE%, achieved $NUMBER%"; false; else echo "Line coverage quality gate passed with $NUMBER% (required $LINE_COV_GATE%)"; true; fi      
      
    - name: MCDC Coverage Quality Gate
      working-directory: ${{github.workspace}}
      shell: bash
      # Query for project's coverage and compare with the gate requirements
      run: NUMBER=$(cpptestcov query -coverage MCDC .coverage) && if [ $NUMBER -lt $MCDC_COV_GATE ]; then echo "MCDC coverage quality gate failed"; echo "Expected result $MCDC_COV_GATE%, achieved $NUMBER%"; false; else echo "MC/DC coverage quality gate passed with $NUMBER% (required $MCDC_COV_GATE%)"; true; fi  
